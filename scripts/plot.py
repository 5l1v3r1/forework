import json
import argparse

import dateutil
import matplotlib.pyplot as plt
import matplotlib.dates as mdates


def plot(jdata):
    min_date = None
    max_date = None
    yaxis = []
    labelsy = []
    for item in jdata:
        start = dateutil.parser.parse(item['start'])
        end = dateutil.parser.parse(item['end'])
        yaxis.append((start, end))
        if min_date is None or start < min_date:
            min_date = start
        if max_date is None or end > max_date:
            max_date = end
        labelsy.append('{t}({p!r})'.format(t=item['name'], p=item['path']))

    fig = plt.figure()
    ax = fig.add_subplot(111)

    for idx, (start, end) in enumerate(yaxis):
        start, end = mdates.date2num((start, end))
        ax.barh(idx + 0.2, end - start, height=0.8, left=start)

    # set Y labels (task names) properties
    plt.setp(
        plt.yticks([i + 0.5 for i in range(len(yaxis))], labelsy, fontsize=14)
    )

    # set X label (date/time) properties
    labelsx = ax.get_xticklabels()
    plt.setp(labelsx, rotation=30, fontsize=12)

    ax.xaxis_date()
    ax.invert_yaxis()
    plt.show()


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        'infile', type=argparse.FileType('r'),
        help='The input JSON file generated by the ForeWork scheduler')
    return parser.parse_args()


def main():
    args = parse_args()
    jdata = json.load(args.infile)
    plot(jdata)


if __name__ == '__main__':
    main()
